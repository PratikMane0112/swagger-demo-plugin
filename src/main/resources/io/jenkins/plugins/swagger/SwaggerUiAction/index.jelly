<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout">
    <l:layout title="Jenkins REST API Documentation" norefresh="true">
        <l:main-panel>
            <h1>Jenkins REST API Documentation</h1>

            <div style="margin: 20px;">
                <p>Please select an API to view:</p>
                <select id="api-select" style="min-width: 250px; padding: 5px;" onchange="updateSwaggerUI(this.value)">
                    <option value="${rootURL}/${it.urlName}/coreApi">Jenkins Core API</option>
                    <!-- Plugin options will be populated here via JavaScript -->
                </select>
            </div>

            <div id="swagger-ui" style="margin: 20px;"></div>

            <!-- Load Swagger UI from CDN as a workaround for WebJar issues -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui-bundle.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui-standalone-preset.min.js"></script>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui.min.css" />

            <script type="text/javascript">
                // Initialize Swagger UI
                window.onload = function() {
                console.log("Loading Swagger UI...");

                // Fetch available APIs
                fetch('${rootURL}/${it.urlName}/apiList')
                .then(response => response.json())
                .then(data => {
                console.log("API List:", data);
                const select = document.getElementById('api-select');

                // Clear existing options
                while (select.options.length > 1) {
                select.remove(1);
                }

                // Add options for each API
                for (const [name, url] of Object.entries(data)) {
                if (name === 'core') continue; // Skip core as it's already added

                const option = document.createElement('option');
                option.value = url;
                option.textContent = name + ' Plugin API';
                select.appendChild(option);
                }
                })
                .catch(error => {
                console.error("Error fetching API list:", error);
                document.getElementById('swagger-ui').innerHTML =
                '&lt;div style="color: red;">Error loading API list: ' + error.message + '';
                });

                // Initialize with core API
                updateSwaggerUI('${rootURL}/${it.urlName}/coreApi');
                }

                function updateSwaggerUI(url) {
                console.log("Updating Swagger UI with URL:", url);

                // Remove existing Swagger UI instance if any
                const swaggerDiv = document.getElementById('swagger-ui');
                while (swaggerDiv.firstChild) {
                swaggerDiv.removeChild(swaggerDiv.firstChild);
                }

                // Initialize new Swagger UI instance
                window.ui = SwaggerUIBundle({
                url: url,
                dom_id: '#swagger-ui',
                deepLinking: true,
                presets: [
                SwaggerUIBundle.presets.apis,
                SwaggerUIStandalonePreset
                ],
                layout: "StandaloneLayout",
                requestInterceptor: function(request) {
                var crumbField = document.getElementsByName("Jenkins-Crumb")[0];
                if (crumbField) {
                request.headers["Jenkins-Crumb"] = crumbField.content;
                }
                return request;
                }
                });
                }
            </script>
        </l:main-panel>
    </l:layout>
</j:jelly>